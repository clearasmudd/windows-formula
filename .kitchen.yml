# -*- coding: utf-8 -*-
# vim: ft=yaml
---
# For help on this file's format, see https://kitchen.ci/
# c:\salt\salt-call.bat  --state-output=changes --config-dir=C:\Users\vagrant\AppData\Local\Temp\kitchen\etc\salt
# state.highstate --retcode-passthrough
# kitchen exec py3-windows-10-1903 -c "rm -Path C:\\Users\\vagrant\\AppData\\Local\\Temp\\kitchen -Force -Recurse"
# http://apealive.net/post/salt-formula-testing-kitchen-salt-1/
driver:
  name: vagrant
  log_level: warning
  communicator: winrm
  linked_clone: true
  provider: virtualbox
  customize:
    memory: 2048
    cpus: 2
  # provider: hyperv
  # network:
  # - ['private_network', bridge: 'Default Switch']
  gui: true
  # Make sure the platforms listed below match up with
  # the `env.matrix` instances defined in `.travis.yml`
  vagrantfiles:
    # stop virtualbox guest additions update
    - test/vagrant_vb_guest.rb

provisioner:
  name: salt_solo
  log_level: warning
  client_rb:
    add_formatter: min
  # Error message due to reboot during converge:
  # [WinRM] 500 returned in cleanup with error: Bad HTTP response returned from server. Body(if present): (500).
  # >>>>>>     Failed to complete #converge action: [[WSMAN ERROR CODE: 995]:
  # <f:WSManFault Code='995' Machine='127.0.0.1' xmlns:f='http://schemas.microsoft.com/wbem/wsman/1/wsmanfault'>
  # <f:Message>The I/O operation has been aborted because of either a thread exit or an application request.
  # </f:Message></f:WSManFault>] on py3-windows-server-2019-1809"
  max_retries: 4
  wait_for_retry: 30
  retry_on_exit_code: [35, 213, 995, 500, 1]
  salt_install: bootstrap
  # salt_bootstrap_options: '-version 2019.2.2 -pythonVersion 3'
  # salt_version: latest
  dry_run: false
  # attributes:
  #   audit:
  #     reporter: json-file
  #     json_file:
  #       location: /test/fc-output.json
  init_environment: |
    Clear-Host
    # write-host "RUNNING ME NOW"
    # if ( Test-Path -Path $env:TEMP\..\kitchen\ -PathType Container )
    # { Remove-Item "$env:TEMP\..\kitchen\" -Recurse -Force }
    $AddedLocation ="c:\salt"
    $Reg = "Registry::HKLM\System\CurrentControlSet\Control\Session Manager\Environment"
    $OldPath = (Get-ItemProperty -Path "$Reg" -Name PATH).Path
    $NewPath= $OldPath + ’;’ + $AddedLocation
    Set-ItemProperty -Path "$Reg" -Name PATH –Value $NewPath
  install_after_init_environment: false
  is_file_root: false
  require_chef: false
  formula: windows
  # pillars-from-files:
  #     mongodb.sls: pillar.example
  #   pillars:
  #     top.sls:
  #       base:
  #         '*':
  #           - mongodb

  # suites:
  #   - name: server
  #     provisioner:
  #       state_top:
  #         base:
  #           '*':
  #             - mongodb
  salt_file_root: /srv/salt
  pillars_from_directories:
    - source: test/salt/pillar/
      dest: srv/pillar/
  state_top:
    base:
      '*':
        - windows
  pillars:
    top.sls:
      base:
        '*':
          - windows
  salt_copy_filter:
    - .kitchen
    - .git
    - __pycache__
    - '*.pyc'
    - .bundle
    - .tox
    - .nox
    - artifacts
    - Gemfile.lock
  salt_minion_extra_config:
    use_superseded:
      - module.run

verifier:
  name: inspec
  log_level: warning
  windows: true
  # cli, documentation, html, progress, json, json-min, json-rspec, junit
  run_destructive: true
  reporter:
    - cli
    - documentation:test/results/%{suite}-%{platform}.txt
    - json:test/results/%{suite}-%{platform}.json
    - junit:test/results/%{suite}-%{platform}.xml
  inspec_tests:
    - path: test/integration/default
    # - supermarket://dev-sec/windows-baseline

transport:
  name: winrm
  log_level: warning
  username: Vagrant
  password: vagrant
  connection_retries: 20
  connection_retry_sleep: 5

platforms:
  # Windows 10, version 1903 (OS Build: 18362.592)
  - name: windows-10-1903
    driver:
      box: StefanScherer/windows_10
      box_version: 2020.01.15

  # Windows 10, version 1809 (OS Build: 17763.503)
  - name: windows-10-1809
    driver:
      box: StefanScherer/windows_10
      box_version: 2019.05.15

  # Windows 10, version 1803 (OS Build: 17134.285)
  - name: windows-10-1803
    driver:
      box: StefanScherer/windows_10
      box_version: 2018.09.12

  # Windows 10, version 1709 (OS Build: 16299.309)
  - name: windows-10-1709
    driver:
      box: StefanScherer/windows_10
      box_version: 2018.03.14

  # Windows Server 2019, version 1809 (OS Build: 17763.864)
  - name: windows-server-2019-1809
    driver:
      box: StefanScherer/windows_2019
      box_version: 2020.01.15

  # windows server 1803 (OS Build: 17763.864) missing

  # Windows Server 2016, version 1607 (OS Build: 14393.2791)
  - name: windows-server-2016
    driver:
      box: StefanScherer/windows_2016
      box_version: 2019.02.14

  # Windows Server 2012 R2 (OS Build: 9600)
  - name: windows-server-2012r2
    driver:
      box: mwrock/Windows2012R2
      box_version: 0.6.1

      # # Windows 8.1 Enterprise
      # - name: windows-8.1
      #   driver:
      #     box: mwrock/Windows8.1-amd64
      #     box_version: 0.1.0

      # # Windows 7 Enterprise
      # - name: windows-7
      #   driver:
      #     box: opentable/win-7-enterprise-amd64-nocm
      #     box_version: 1.0.0

suites:
  - name: py3
    provisioner:
      salt_bootstrap_options: "-version 2019.2.3 -pythonVersion 3"
      # - name: py2
      #   provisioner:
      #     salt_bootstrap_options: "-version 2019.2.3 -pythonVersion 2"
