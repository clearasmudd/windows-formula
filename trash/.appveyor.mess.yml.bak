---
version: 1.0.{build}

platform:
  - x64

configuration:
  - Release
  - Test

image:
  # - Ubuntu
  - Visual Studio 2019
  # - Visual Studio 2017
  # - Visual Studio 2015
  # - Visual Studio 2013
  # - Visual Studio 2019 Preview

environment:
  APPVEYOR_RDP_PASSWORD: "kOHOBL^3TvBqtj#!53Z7i0#a%"

# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

deploy: off

skip_tags: true

# matrix:
#   - fast_finish: true
for:
-
  matrix:
    fast_finish: true
    only:
      - image: Visual Studio 2019
  install:
    - ps: wslconfig /list
    - ps: wslconfig /setdefault Ubuntu-18.04
    - ps: wsl export DEBIAN_FRONTEND=noninteractive
    - ps: wsl sudo apt-get install -y libpq-dev
    - ps: wsl sudo apt-get install -y debconf-utils
    - ps: wsl /bin/bash -c "echo 'libssl1.1 libraries/restart-without-asking boolean true' | sudo debconf-set-selections"
    - ps: wsl cd /mnt/c/projects/windows-formula/
    # - ps: wsl sudo apt-get install -y software-properties-common
    # - ps: wsl sudo apt-add-repository universe
    - ps: wsl sudo apt-get update
    - ps: wsl sudo apt-get install -y python3 python3-pip
    # - ps: $env:Path += ";C:\Users\appveyor\AppData\Roaming\Python\Scripts"
    # - ps: $ENV:PATH="C:\Python38-x64;C:\Python38-x64\Scripts;$ENV:PATH"
    # - ps: which.exe python
    # - ps: Foreach($file in (git ls-files -- '*.sls' '*.jinja' '*.j2' '*.tmpl' '*.tst')){salt-lint $file}
    # - ps: pip install --user yamllint>=1.17.0
    # - ps: yamllint -s .
    - ps: wsl alias python=/usr/bin/python3
    - ps: wsl alias pip=/usr/bin/pip3
    - ps: wsl source ~/.profile
    - ps: wsl source ~/.bashrc
    - ps: wsl python3 --version
    - ps: wsl pip3 install --user salt-lint
    # - ps: wsl cd /mnt/c/projects/windows-formula/
    - ps: wsl /bin/bash -c "git ls-files -- '*.sls' '*.jinja' '*.j2' '*.tmpl' '*.tst' | xargs ~/.local/bin/salt-lint"
    # Install and run `yamllint`
    # Need at least `v1.17.0` for the `yaml-files` setting
    - ps: wsl pip3 install --user yamllint>=1.17.0
    - ps: wsl ~/.local/bin/yamllint -s .
    # Install and run `rubocop`
    - ps: wsl sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev -y
    - ps: wsl mkdir /home/appveyor/.gnupg
    - ps: wsl chmod go-rwx /home/appveyor/.gnupg
    - ps: wsl gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    - ps: wsl /bin/bash -c "curl -sSL https://get.rvm.io | sudo bash -s stable"
    - ps: wsl source ~/.rvm/scripts/rvm
    - ps: wsl rvm install 2.6.5
    - ps: wsl rvm use 2.6.5 --default
    - ps: wsl ruby -v
    - ps: wsl gem install rubocop
    - ps: wsl rubocop -d
    # - ps: $ENV:PATH="C:\Ruby26-x64\bin;C:\Python38-x64;C:\Python38-x64\Scripts;$ENV:PATH"
    # - ps: ruby -v
    # - ps: gem install rubocop
    # - ps: cd C:\projects\windows-formula
    # - ps: rubocop -d
    # Run `shellcheck` (already pre-installed in Travis)
    - ps: wsl sudo apt-get install shellcheck -y
    - ps: wsl shellcheck --version
    - ps: wsl /bin/bash -c "git ls-files -- '*.sh' '*.bash' '*.ksh' | xargs shellcheck"
    # Install and run `commitlint`
    - ps: wsl sudo apt-get install curl -y
    - ps: wsl /bin/bash -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash"
    - ps: wsl source ~/.bashrc
    - ps: wsl nvm ls
    - ps: wsl nvm install --lts
    - ps: wsl nvm use --lts
    # - ps: wsl cd /mnt/c/projects/windows-formula/
    - ps: wsl npm install
    # - ps: wsl npm i -D @commitlint/config-conventional
    - ps: wsl npx commitlint --from=HEAD~1

build: Script

before_build:
  - ps: $env:machine_user="vagrant"
  - ps: $env:machine_pass="vagrant"
  - ps: $env:KITCHEN_LOCAL_YAML=".kitchen.appveyor.yml"
  - ps: $env:CHEF_LICENSE="accept"
  - ps: (& cmd /c); iex (irm https://omnitruck.chef.io/install.ps1); Install-Project -Project chefdk -channel current
  - ps: Get-CimInstance Win32_OperatingSystem | Format-List *
  - ps: $PSVersionTable
  - c:\opscode\chefdk\bin\chef.bat exec ruby --version
  - ps: secedit /export /cfg $env:temp/export.cfg
  - ps: ((get-content $env:temp/export.cfg) -replace ('PasswordComplexity = 1', 'PasswordComplexity = 0')) | Out-File $env:temp/export.cfg
  - ps: ((get-content $env:temp/export.cfg) -replace ('MinimumPasswordLength = 8', 'MinimumPasswordLength = 0')) | Out-File $env:temp/export.cfg
  - ps: secedit /configure /db $env:windir/security/new.sdb /cfg $env:temp/export.cfg /areas SECURITYPOLICY
  - ps: net user /add $env:machine_user $env:machine_pass
  - ps: net localgroup administrators $env:machine_user /add
  - ps: c:\opscode\chefdk\bin\chef.bat shell-init powershell | iex; cmd /c c:\opscode\chefdk\bin\chef.bat --version
build_script:
  - ps: c:\opscode\chefdk\bin\chef.bat exec bundle install
  - ps: c:\opscode\chefdk\bin\chef.bat exec kitchen list
# after_build:

# before_test:
test_script:
  - ps: c:\opscode\chefdk\bin\chef.bat exec kitchen test
after_test:
  - ps: |
      # upload results to AppVeyor
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test\results\TEST.xml))

# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
