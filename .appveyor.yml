---
version: '1.0.{build}'
skip_tags: true
environment:
  matrix:
    # Linux job
    # https://www.appveyor.com/docs/linux-images-software/
    - job_name: Lint Tests (salt-lint, yamllint, rubocop, shellcheck and commitlint)
      job_group: Lint Tests
      appveyor_build_worker_image: Ubuntu

      # # Windows jobs
      # # https://www.appveyor.com/docs/windows-images-software/
      # - job_name: Chef Inspec Tests (Windows Server 2019)
      #   job_depends_on: Lint Tests
      #   job_group: Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2019

      # - job_name: Chef Inspec Tests (Windows Server 2016)
      #   job_depends_on: Lint Tests
      #   job_group: Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2017

      # - job_name: Chef Inspec Tests (Windows Server 2012 R2)
      #   job_depends_on: Lint Tests
      #   job_group: Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2015

      # - job_name: On-Premise Chef Inspec Test Results (Windows 10 Build 1903)
      #   local_kitchen_suite_platform: py3-windows-10-1903
      #   job_depends_on: Chef Inspec Tests
      #   job_group: Mock Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2019
      # - job_name: On-Premise Chef Inspec Test Results (Windows 10 Build 1809)
      #   local_kitchen_suite_platform: py3-windows-10-1809
      #   job_depends_on: Chef Inspec Tests
      #   job_group: Mock Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2019
      # - job_name: On-Premise Chef Inspec Test Results (Windows 10 Build 1803)
      #   local_kitchen_suite_platform: py3-windows-10-1803
      #   job_depends_on: Chef Inspec Tests
      #   # job_depends_on: Lint Tests
      #   job_group: Mock Chef Inspec Tests
      #   appveyor_build_worker_image: Visual Studio 2019

      # - job_name: Release
      #   appveyor_build_worker_image: Ubuntu
      #   job_depends_on: Lint Tests, Chef Inspec Tests, Mock Chef Inspec Tests
      #   MAINTAINER_TOKEN: ${GH_TOKEN}

matrix:
  fast_finish: true

for:
  -
    matrix:
      only:
        - job_group: Lint Tests
    build_script:
      - sh: echo build_script for $APPVEYOR_JOB_NAME
      - sh: date
      - sh: pwd; ls -la; printenv
      - sh: PATH=$PATH:/home/appveyor/.local/bin
      - sh: bash --version
      - sh: ./scripts/appveyor_tests.sh -i
    test_script:
      - sh: echo test_script for $APPVEYOR_JOB_NAME
      - sh: ./scripts/appveyor_tests.sh -t salt-lint || error=true
      - sh: ./scripts/appveyor_tests.sh -t yamllint || error=true
      - sh: ./scripts/appveyor_tests.sh -t rubocop || error=true
      - sh: ./scripts/appveyor_tests.sh -t shellcheck || error=true
      - sh: git config --global user.email "you@example.com"
      - sh: git config --global user.name "Your Name"
      - sh: echo "testing insert" >> ./scripts/newfile.sh
      - sh: git status
      - sh: git add -A
      - sh: git status
      - sh: git commit -m "should cause failure of commitlint"
      - sh: ./scripts/appveyor_tests.sh -t commitlint </dev/null || error=true
      - sh: sleep 5
      # - sh: if [ $error ]; then $host.SetShouldExit(1); fi
      - sh: if [ $error ]; then exit 1; fi
    # after_test:
    #   - sh: echo after_test for $APPVEYOR_JOB_NAME
    #   # - sh: if [ $error ]; then echo "One of the lint tests failed, making sure appveyor lint job fails."; fi
    #   - sh: >
    #       echo "I can't figure out how to stop all the following errors.
    #       /opt/appveyor/build-agent/bash-shell.sh: line 36: read: read error: 0: Resource temporarily unavailable.
    #       I've seen this: https://github.com/appveyor/ci/issues/3002."
    #   - sh: if [ $error ]; then $host.SetShouldExit(1); fi
    deploy: off

  -
    matrix:
      only:
        - job_depends_on: Lint Tests
    build_script:
      - ps: Write-Host "build_script for $env:APPVEYOR_JOB_NAME"
      # - ps: $env:APPVEYOR_RDP_PASSWORD="lj=adf89ASD0098_sd!fwe!==HUI"
      # - ps: $dlstring = 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'
      # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString($dlstring))
      # - ps: $ErrorActionPreference = "Stop";
      # Saltstack needs to see the CI environment variable when run through test kitchen proxy driver
      - ps: if (Test-Path env:CI) {[System.Environment]::SetEnvironmentVariable("CI", $Env:CI, "Machine")}
      - ps: $env:machine_user="vagrant"
      - ps: $env:machine_pass="vagrant"
      - ps: $env:KITCHEN_LOCAL_YAML=".kitchen.appveyor.yml"
      - ps: $env:CHEF_LICENSE="accept"
      - ps: >
          Get-ChildItem Env: | Sort Name
      - ps: Get-Package -Provider Programs -IncludeWindowsInstaller | Sort Name
      - ps: Get-CimInstance Win32_OperatingSystem | Format-List * | Out-String -Stream | Sort-Object
      - ps: $PSVersionTable | Sort Name
      # Need to uninstall git and 7-zip to test installation using saltstack
      - ps: ./scripts/git-silent-uninstall.ps1
      # - ps: Get-ChildItem -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall | Get-ItemProperty |
      # Where-Object {$_.DisplayName -match "7-Zip"} | Select-Object -Property DisplayName, UninstallString
      # - ps: >
      #     if (Test-Path "C:\Program Files\7-Zip\Uninstall.exe" -PathType Leaf)
      #     { write-host "Removing 7-Zip from C:\Program Files\7-Zip\";
      #     start-process -FilePath "C:\Program Files\7-Zip\Uninstall.exe" -ArgumentList "/S" }
      - ps: >
          (& cmd /c); iex (irm https://omnitruck.chef.io/install.ps1);
          Install-Project -Project chefdk -channel stable -version 4.7.73
      - ps: c:\opscode\chefdk\bin\chef.bat exec ruby --version
      - ps: secedit /export /cfg $env:temp/export.cfg
      - ps: >
          ((get-content $env:temp/export.cfg) -replace
          ('PasswordComplexity = 1', 'PasswordComplexity = 0')) | Out-File $env:temp/export.cfg
      - ps: >
          ((get-content $env:temp/export.cfg) -replace ('MinimumPasswordLength = 8', 'MinimumPasswordLength = 0')) |
          Out-File $env:temp/export.cfg
      - ps: secedit /configure /db $env:windir/security/new.sdb /cfg $env:temp/export.cfg /areas SECURITYPOLICY
      - ps: net user /add $env:machine_user $env:machine_pass
      - ps: net localgroup administrators $env:machine_user /add
      # - ps: c:\opscode\chefdk\bin\chef.bat shell-init powershell | iex;
      # cmd /c c:\opscode\chefdk\bin\chef.bat --version
      - ps: c:\opscode\chefdk\bin\chef.bat exec bundle install
      - ps: c:\opscode\chefdk\bin\chef.bat exec kitchen list
      # - ps: if ($env:CI -imatch 'True') {write-host 'IS CI'} else {write-host 'IS NOT CI'}
      # - ps: c:\opscode\chefdk\bin\chef.bat exec kitchen setup
      # - ps: if ($LastExitCode -ne 0) {write-host "last exit code $LastExitCode"; $host.SetShouldExit($LastExitCode)}
    test_script:
      - ps: Write-Host "test_script for $env:APPVEYOR_JOB_NAME"
      - ps: $ErrorActionPreference = "Continue";
      - ps: c:\opscode\chefdk\bin\chef.bat exec kitchen test
      # - ps: >
      #     write-host "Kitchen Test Exit Code: $LastExitCode"
    deploy: off
    # on_failure:
    #   - ps: >
    #       if (Test-Path "c:\temp\salt_minion.log" -PathType Leaf)
    #       { Get-Content "c:\temp\salt_minion.log" }
    on_finish:
      - ps: Write-Host "on_finish for $env:APPVEYOR_JOB_NAME"
      # uncomment to debug
      # - ps: $env:APPVEYOR_RDP_PASSWORD="lj=adf89ASD0098_sd!fwe!==HUI"
      # - ps: $dlstring = 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'
      # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString($dlstring))
      - ps: $inspec_results = '.\test\results\appveyor-windows.xml'
      - ps: >
          if (Test-Path $inspec_results -PathType Leaf)
          {
            ((Get-Content -path $inspec_results -Raw) -replace 'default','InSpec') | Set-Content -Path $inspec_results
            # upload results to AppVeyor
            $wc = New-Object 'System.Net.WebClient'
            $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
            $wc.UploadFile($url, (Resolve-Path $inspec_results))
            # Get-Content -path $inspec_results
          }
          else
          {
            dir c:\projects\windows-formula\test\results
          }

  -
    matrix:
      only:
        - job_depends_on: Chef Inspec Tests
    build_script:
      - ps: Write-Host "build_script for $env:APPVEYOR_JOB_NAME"
      - ps: $ErrorActionPreference = "Stop";
      - ps: $env:local_kitchen_results = "c:\projects\windows-formula\test\results"
      - ps: $env:local_kitchen_results_log = "$env:local_kitchen_results\$env:local_kitchen_suite_platform.log"
      - ps: $env:local_kitchen_results_xml = "$env:local_kitchen_results\$env:local_kitchen_suite_platform.xml"
      - ps: >
          if (Test-Path "$env:local_kitchen_results_log" -PathType Leaf)
          { Write-Host "OUTPUTTING ON PREMISE TEST KITCHEN RESULTS FOR $env:local_kitchen_suite_platform"}
          Else { Write-Host "NO LOCAL RESULTS INCLUDED" }
      - ps: >
          if (Test-Path "$env:local_kitchen_results_log" -PathType Leaf)
          { Get-Content "$env:local_kitchen_results_log" }
      - ps: >
          if (Test-Path "$env:local_kitchen_results_xml" -PathType Leaf)
          { Copy-Item "$env:local_kitchen_results_xml" "$env:local_kitchen_results\TEST.xml" }
    test: off
    deploy: off
    on_finish:
      - ps: Write-Host "on_finish for $env:APPVEYOR_JOB_NAME"
      - ps: dir c:\projects\windows-formula\test\results
      - ps: |
          # upload results to AppVeyor
          $wc = New-Object 'System.Net.WebClient'
          $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
          $wc.UploadFile($url, (Resolve-Path .\test\results\$env:local_kitchen_suite_platform.xml))
      # - ps: >
      #     if (Test-Path ".\test\results\$env:local_kitchen_suite_platform.xml" -PathType Leaf)
      #     { $wc.UploadFile($url, (Resolve-Path .\test\results\$env:local_kitchen_suite_platform.xml)) }

  -
    matrix:
      only:
        - job_name: Release
    branches:
      only:
        - master
    build_script:
      - sh: echo build_script for $APPVEYOR_JOB_NAME on branch $APPVEYOR_REPO_BRANCH
      - sh: go get github.com/myii/maintainer
      - sh: maintainer contributor
      - sh: nvm current; nvm ls; nvm use 12.14.1; nvm ls
      - sh: npm i -D semantic-release
      - sh: npx semantic-release
      # - sh: npm i -D @semantic-release/changelog@3 @semantic-release/exec@3
      # @semantic-release/git@7 semantic-release@>=15.8.0
      # - sh: npx semantic-release@15.14
      # - sh: npm i
      # deploy:
      #   provider: Script
      #   sh: npx semantic-release@15.14
      #   # sh: if [ "$APPVEYOR_REPO_BRANCH" == "master" ]; then npx semantic-release@15.14; fi
    test: off
    deploy: off
